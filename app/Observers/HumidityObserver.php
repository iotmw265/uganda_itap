<?php

namespace App\Observers;

use App\Models\DataCentresHum;
use App\Models\User;
use App\Models\UserSettings;
use App\Helpers\Helper;
use Illuminate\Support\Facades\DB;


class HumidityObserver
{
    /**
     * Handle the DataCentresHum "created" event.
     *
     * @param  \App\Models\DataCentresHum  $dataCentresHum
     * @return void
     */
    public function created(DataCentresHum $dataCentresHum)
    {
        // sms server credentials
        $sms_api_base_url = "https://sms.imosys.mw";
        $sms_api_url = "smpp/api/send";
        $sms_server_key = "JBGAKHECH1MW@N0";
        //

        $humidity_records = DB::table('alerts')->where('status','pending')->where('parameter','humidity')->get();

        $Blantyre = ["AAACD0FEFF2C6A3C", "99ACD0FEFF2C6A3C"];
        $Lilongwe = ["9FACD0FEFF2C6A3C","C5ACD0FEFF2C6A3C", "88ACD0FEFF2C6A3C", "68ACD0FEFF2C6A3C"];

        foreach ( $humidity_records as $row)
        {
            $ieee = $row->ieee;

            if($ieee == "AAACD0FEFF2C6A3C" || $ieee == "99ACD0FEFF2C6A3C") {

                $title = "Centenary Bank Server Room";
                $message = "Room humidity in Blantyre data center has gone above threshold. \n[NOTE: IMS autogenerated message]";
        
                /*$tokens = User::whereNotNull('firebase_token')
                    ->pluck('firebase_token')
                    ->toArray();
                $phoneNumbers = User::whereNotNull('phone')
                    ->pluck('phone')
                    ->toArray();
                $jsonNotification = json_encode([]); #empty for now
                $push_api_response = Helper::PushFirebaseNotification(
                    "AAAAmNWp5RE:APA91bET4f7TdXyaXpNCiIzjp1bk7H8y8yYtJbddzhFaU13O184U5dsvwQMa0x3JPiZnhlGBXoHFGgs8wbT7TrDP7UOn8rwBJrbBwQOvq2v_uCjBg956Q9-uhh-nrZ4NgrtLnzsVhgPV", $tokens,
                    "{$title}", "{$message}",
                    $jsonNotification, "default" #sound
                );
                foreach ($phoneNumbers as $phoneNumber) {
                    $sms = Helper::Post($sms_api_base_url, $sms_api_url, array(
                        'access_key' => $sms_server_key,
                        'phone' => $phoneNumber,
                        'message' => $message,
                    ));
                }*/

                $sms = Helper::Post($sms_api_base_url, $sms_api_url, array(
                    'access_key' => $sms_server_key,
                    'phone' => $phoneNumber,
                    'message' => $message,
                ));


                DB::table('device_status')->where('ieee',$ieee)->update(['status' => 'normal',]);
                DB::table('alerts')->where('ieee',$ieee)->update(['status' => 'normal',]);
            
            }else {

                    $title = "Centenary Bank Server Room";
                    $message = "Room humidity in Lilongwe data center has gone above threshold. \n[NOTE: IMS autogenerated message]";


                    /*$lastAlert = DB::table('alerts')
                        ->where('location', 'Lilongwe Branch')
                        ->where('parameter', 'humidity')
                        ->where('created_at', '>', now()->subHours(2))
                        ->first();

                        $tokens = User::whereNotNull('firebase_token')
                            ->pluck('firebase_token')
                            ->toArray();
                        $phoneNumbers = User::whereNotNull('phone')
                            ->pluck('phone')
                            ->toArray();
                        $jsonNotification = json_encode([]); #empty for now
                        $push_api_response = Helper::PushFirebaseNotification(
                            "AAAAmNWp5RE:APA91bET4f7TdXyaXpNCiIzjp1bk7H8y8yYtJbddzhFaU13O184U5dsvwQMa0x3JPiZnhlGBXoHFGgs8wbT7TrDP7UOn8rwBJrbBwQOvq2v_uCjBg956Q9-uhh-nrZ4NgrtLnzsVhgPV", $tokens,
                            "{$title}", "{$message}",
                            $jsonNotification, "default" #sound
                        );
                        foreach ($phoneNumbers as $phoneNumber) {
                            $sms = Helper::Post($sms_api_base_url, $sms_api_url, array(
                                'access_key' => $sms_server_key,
                                'phone' => $phoneNumber,
                                'message' => $message,
                            ));
                        }
                    */
                        
                        $sms = Helper::Post($sms_api_base_url, $sms_api_url, array(
                            'access_key' => $sms_server_key,
                            'phone' => '+265994647532',
                            'message' => $message,
                        ));

                        

                        DB::table('device_status')->where('ieee',$ieee)->update(['status' => 'normal',]);
                        DB::table('alerts')->where('id',$row->id)->update(['status' => 'normal',]);
                    

            }
            
        }

    }

    /**
     * Handle the DataCentresHum "updated" event.
     *
     * @param  \App\Models\DataCentresHum  $dataCentresHum
     * @return void
     */
    public function updated(DataCentresHum $dataCentresHum)
    {
        //
    }

    /**
     * Handle the DataCentresHum "deleted" event.
     *
     * @param  \App\Models\DataCentresHum  $dataCentresHum
     * @return void
     */
    public function deleted(DataCentresHum $dataCentresHum)
    {
        //
    }

    /**
     * Handle the DataCentresHum "restored" event.
     *
     * @param  \App\Models\DataCentresHum  $dataCentresHum
     * @return void
     */
    public function restored(DataCentresHum $dataCentresHum)
    {
        //
    }

    /**
     * Handle the DataCentresHum "force deleted" event.
     *
     * @param  \App\Models\DataCentresHum  $dataCentresHum
     * @return void
     */
    public function forceDeleted(DataCentresHum $dataCentresHum)
    {
        //
    }
}
